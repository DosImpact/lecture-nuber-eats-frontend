[{"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\index.tsx":"1","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\App.tsx":"3","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\apollo.ts":"4","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\routers\\logged-out-router.tsx":"5","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\routers\\logged-in-router.tsx":"6","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\routers\\form-example.tsx":"7","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\pages\\create-account.tsx":"8","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\pages\\login.tsx":"9","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\components\\FormError.tsx":"10"},{"size":653,"mtime":1611575352455,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611246945331,"results":"13","hashOfConfig":"12"},{"size":392,"mtime":1611461779710,"results":"14","hashOfConfig":"12"},{"size":451,"mtime":1611657531489,"results":"15","hashOfConfig":"12"},{"size":505,"mtime":1611575855441,"results":"16","hashOfConfig":"12"},{"size":344,"mtime":1611461894908,"results":"17","hashOfConfig":"12"},{"size":1293,"mtime":1611575556758,"results":"18","hashOfConfig":"12"},{"size":218,"mtime":1611575548497,"results":"19","hashOfConfig":"12"},{"size":3502,"mtime":1611595057110,"results":"20","hashOfConfig":"12"},{"size":258,"mtime":1611576434231,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"17w8sh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\index.tsx",[],["45","46"],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\App.tsx",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\apollo.ts",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\routers\\logged-out-router.tsx",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\routers\\logged-in-router.tsx",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\routers\\form-example.tsx",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\pages\\create-account.tsx",[],"C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\pages\\login.tsx",["47"],"import { ApolloError, gql, useMutation } from \"@apollo/client\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport FormError from \"../components/FormError\";\r\nimport {\r\n  loginMutation,\r\n  loginMutationVariables,\r\n} from \"../__generated__/loginMutation\";\r\n\r\n//폼 인터페이스\r\ninterface ILoginForm {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n// 로그인 뮤테이션 gql 정의\r\nconst LOGIN_MUTATION = gql`\r\n  # mutation loginMutation($email: String!, $password: String!) {\r\n  mutation loginMutation($loginInput: LoginInput!) {\r\n    login(input: $loginInput) {\r\n      error\r\n      ok\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Login = () => {\r\n  // 훅폼\r\n  const {\r\n    register,\r\n    getValues,\r\n    errors,\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm<ILoginForm>();\r\n\r\n  // 로그인 뮤테이션 처리\r\n  const [loginMutation, { loading, data: loginMutationResult }] = useMutation<\r\n    loginMutation,\r\n    loginMutationVariables\r\n  >(LOGIN_MUTATION, {\r\n    variables: {\r\n      loginInput: {\r\n        email: watch(\"email\"),\r\n        password: watch(\"password\"),\r\n      },\r\n    },\r\n    // 성공시\r\n    onCompleted: (data: loginMutation) => {\r\n      // 데이터 유입 - 토큰  (상단의 data와 동일함 )\r\n      if (data.login.ok) {\r\n        console.log(data.login.token);\r\n      }\r\n    },\r\n    // 응답 실패시\r\n    onError: (error: ApolloError) => {\r\n      // Server 가 다운 - 404 애러등 ( 네트워크 인프라 문제 )\r\n      // 참고) Server 202 의 애러는 의도적인 애러이다.\r\n      console.log(error.message);\r\n    },\r\n  });\r\n\r\n  const onSubmit = () => {\r\n    // form to API 연결 1. 데이터를 가져와서 Mutation에 직접 넣을 수 있다.\r\n    // const { email, password } = getValues();\r\n    loginMutation();\r\n    // form to API 연결 2. hook form의 watch 기능을 이용해서 mutation에 실시간 연결\r\n  };\r\n\r\n  // console.log(loginMutationResult);\r\n  // console.log(errors);\r\n\r\n  return (\r\n    <div className=\"h-screen flex items-center justify-center bg-gray-800\">\r\n      <div className=\"bg-white w-full max-w-lg pt-10 pb-7 rounded-lg text-center\">\r\n        <h3 className=\"text-2xl text-gray-800\">Log In</h3>\r\n        <form\r\n          onSubmit={handleSubmit(onSubmit)}\r\n          className=\"grid gap-3 mt-5 px-5\"\r\n        >\r\n          <input\r\n            ref={register({ required: \"Email is required\" })}\r\n            name=\"email\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            className=\"input\"\r\n          />\r\n          {errors.email?.message && (\r\n            <FormError errorMessage={errors.email?.message} />\r\n          )}\r\n          <input\r\n            ref={register({ required: \"Password is required\", minLength: 5 })}\r\n            required\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            className=\"input\"\r\n          />\r\n          {errors.password?.message && (\r\n            <FormError errorMessage={errors.password?.message} />\r\n          )}\r\n          {errors.password?.type === \"minLength\" && (\r\n            <FormError errorMessage=\"Password must be more than 5 chars.\" />\r\n          )}\r\n          <button className=\"mt-3 btn\">Log In</button>\r\n          {loading && <span>loading...</span>}\r\n          {loginMutationResult?.login.error && (\r\n            <FormError errorMessage={loginMutationResult?.login.error} />\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Dos\\Desktop\\Projects\\nuber-eats_frontend\\src\\components\\FormError.tsx",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":32,"column":5,"nodeType":"56","messageId":"57","endLine":32,"endColumn":14},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","replacedBy":"59"},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"@typescript-eslint/no-unused-vars","'getValues' is assigned a value but never used.","Identifier","unusedVar",["60"],["61"],"no-global-assign","no-unsafe-negation"]